// Code generated by mockery v2.15.0. DO NOT EDIT.

package promising

import mock "github.com/stretchr/testify/mock"

// MockICache is an autogenerated mock type for the ICache type
type MockICache[K comparable, V interface{}] struct {
	mock.Mock
}

// Complete provides a mock function with given fields: key, val, err
func (_m *MockICache[K, V]) Complete(key K, val V, err error) {
	_m.Called(key, val, err)
}

// Destroy provides a mock function with given fields:
func (_m *MockICache[K, V]) Destroy() {
	_m.Called()
}

// GetOutcome provides a mock function with given fields: key
func (_m *MockICache[K, V]) GetOutcome(key K) IOutcome[V] {
	ret := _m.Called(key)

	var r0 IOutcome[V]
	if rf, ok := ret.Get(0).(func(K) IOutcome[V]); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(IOutcome[V])
		}
	}

	return r0
}

type mockConstructorTestingTNewMockICache interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockICache creates a new instance of MockICache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockICache[K comparable, V interface{}](t mockConstructorTestingTNewMockICache) *MockICache[K, V] {
	mock := &MockICache[K, V]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
